- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    dotfiles:
      src:
        repository: "https://github.com/yusekiya/dotfiles.git"
      dest: "~/dotfiles"
      symlink_script: "sh setup.sh -f"

    homebrew_taps:
      - homebrew/cask-fonts
      - railwaycat/emacsmacport

    homebrew_packages:
      - { name: ansible }
      - { name: ag }
      - { name: aspell }
      - { name: autoconf }
      - { name: automake }
      - { name: xz }
      - { name: binutils }
      - { name: bash}
      - { name: bash-completion2 }
      - { name: cmake }
      - { name: colordiff }
      - { name: coreutils }
      - { name: cppformat }
      - { name: ctags }
      - { name: direnv }
      - { name: docker-completion }
      - { name: docker-compose-completion }
      - { name: direnv }
      - { name: editorconfig }
      - { name: fd }
      - { name: ffmpeg }
      - { name: findutils }
      - { name: fzf }
      - { name: gawk}
      - { name: ghostscript }
      - { name: git }
      - { name: gitup}
      - { name: gnutls }
      - { name: gnu-sed }
      - { name: imagemagick }
      - { name: nkf }
      - { name: librsvg }
      - { name: llvm }
      - { name: lua }
      - { name: pandoc }
      - { name: peco }
      - { name: pstoedit }
      - { name: rsync }
      - { name: ripgrep }
      - { name: ssh-copy-id }
      - { name: tig }
      - { name: tldr }
      - { name: tmux }
      - { name: tree }
      - { name: vim }
      - { name: emacs-mac }
      - { name: nodebrew }
      - { name: zsh}

    homebrew_cask_packages:
      - { name: font-fontawesome }
      - { name: font-freesans }

    basic_dirs:
      - { path: "{{ lookup('env', 'HOME') }}/.nodebrew/src",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.brewland",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/scratch",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/Study",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/Documents/AcademicConference",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/Documents/Fund",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/Documents/Seminar",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/Documents/Paperwork",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/bin",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/include",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/lib",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/lib/python3/site-packages",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/share",
          state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/src",
          state: directory }

    git_repos:
      - { name: tpm,
          repo: "https://github.com/tmux-plugins/tpm.git",
          dest: "~/.tmux/plugins/tpm" }
      - { name: solarized,
          repo: "https://github.com/altercation/solarized.git",
          dest: "~/repos/solarized" }
      - { name: nord-iterm2,
          repo: "https://github.com/arcticicestudio/nord-iterm2.git",
          dest: "~/repos/nord_iterm2" }
      - { name: dircolors-solarized,
          repo: "https://github.com/seebi/dircolors-solarized.git",
          dest: "~/repos/dircolors-solarized" }
      # - { name: enhancd,
          # repo: "https://github.com/b4b4r07/enhancd.git",
          # dest: "~/repos/enhancd" }

  tasks:

    - name: Verify password
      become: yes
      command: echo "sudo password verified"
      changed_when: False

    - name: Create basic directories
      file:
        path: "{{ item.path }}"
        state: "{{ item.state }}"
      with_items: "{{ basic_dirs }}"

    - name: Add repositories for homebrew
      homebrew_tap:
        tap: "{{ item }}"
        state: present
      with_items: "{{ homebrew_taps }}"

    - name: Update homebrew
      homebrew:
        update_homebrew: yes

    - name: Install homebrew packages
      homebrew:
        name: "{{ item.name }}"
        state: "{{ item.state | default('latest') }}"
      with_items: "{{ homebrew_packages }}"
      register: ret_homebrew

    - name: Check updated homebrew package
      set_fact: updated_homebrew_package={{ ret_homebrew.results | selectattr('changed') | map(attribute='item.name') | list }}

    - name: Install homebrew cask packages
      homebrew_cask:
        name: "{{ item.name }}"
        state: "{{ item.state | default('present') }}"
      with_items: "{{ homebrew_cask_packages }}"
      register: ret_homebrew_cask

    - name: Check updated homebrew cask package
      set_fact: updated_homebrew_cask_package={{ ret_homebrew_cask.results | selectattr('changed') | map(attribute='item.name') | list }}

    - name: Install dotfiles
      git:
        repo: "{{ dotfiles.src.repository }}"
        dest: "{{ dotfiles.dest }}"
      register: ret_git_dotfiles
      # Uncomment the following line if git module always returns state changed
      # changed_when: "ret_git_dotfiles.after|default('after') != ret_git_dotfiles.before|default('before')"

    - name: Symlink dotfiles
      shell: "{{ dotfiles.symlink_script }}"
      args:
        chdir: "{{ dotfiles.dest }}"
      when: ret_git_dotfiles is changed

    - name: Install my utils | Clone
      git:
        repo: "https://github.com/yusekiya/toolbox.git"
        dest: "~/repos/toolbox"
      register: ret_toolbox

    - stat:
        path: "~/.git_manage"
      register: stat_git_manage

    - name: Install my utils | Create database file for git manage command
      file:
        state: touch
        dest: "~/.git_manage"
      when: not stat_git_manage.stat.exists

    - name: Install my utils | Install
      file:
        state: link
        src: "{{ item }}"
        dest: "~/.local/bin/{{ item | basename }}"
      with_fileglob:
        - "~/repos/toolbox/*"
      when: ret_toolbox is changed

    - name: Install fzf auto complete and key bindings
      shell: /usr/local/opt/fzf/install --key-bindings --completion --no-update-rc
      when: "'fzf' in updated_homebrew_package"

    - name: Clone git repositories
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
      with_items: "{{ git_repos }}"
      register: ret_git_clone

    - name: Install Nord dircolors | git clone repo
      git:
        repo: "https://github.com/arcticicestudio/nord-dircolors.git"
        dest: "~/repos/nord-dircolors"
      register: ret_nord_dircolors_clone

    - name: Install Nord dircolors | make symlink
      file:
        state: link
        src: "~/repos/nord-dircolors/src/dir_colors"
        dest: "~/.dircolors"
      when: ret_nord_dircolors_clone is changed

    - name: Downlowd .envrc for brewland
      get_url:
        url: "https://gist.githubusercontent.com/yusekiya/c38cb5216084365273af117b99a42472/raw/dfb51ec9b2c4353eb1a81b223122e510f94d53d9/.envrc"
        dest: "{{ lookup('env', 'HOME') }}/.brewland/.envrc"

    - name: Register zsh
      become: yes
      lineinfile:
        dest: /etc/shells
        insertafter: EOF
        line: /usr/local/bin/zsh
        state: present
      notify: Change login shell

  handlers:
    - name: Change login shell
      command: chsh -s /usr/local/bin/zsh
