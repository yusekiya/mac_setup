- hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    brew_exe_path: "{% if ansible_facts['architecture'] == 'arm64' %}/opt/homebrew/bin{% else %}/usr/local/bin{% endif %}"

    dotfiles:
      src:
        repository: "https://github.com/yusekiya/dotfiles.git"
      dest: "~/dotfiles"
      symlink_script: "bash setup.sh -f -e .pkgbuild,.minttyrc"

    homebrew_taps:
      - homebrew/cask-fonts
      - railwaycat/emacsmacport

    homebrew_packages:
      - { name: ag }
      - { name: ansible }
      - { name: aspell }
      - { name: autoconf }
      - { name: automake }
      - { name: bash-completion@2 }
      - { name: bash }
      - { name: binutils }
      - { name: cmake }
      - { name: colima }
      - { name: colordiff }
      - { name: cookiecutter }
      - { name: coreutils }
      - { name: ctags }
      - { name: direnv }
      - { name: docker }
      - { name: docker-compose }
      - { name: editorconfig }
      - { name: emacs-mac }
      - { name: fd }
      - { name: ffmpeg }
      - { name: findutils }
      - { name: fzf }
      - { name: gawk }
      - { name: ghostscript }
      - { name: git }
      - { name: gitup }
      - { name: gnu-sed }
      - { name: gnutls }
      - { name: imagemagick }
      - { name: librsvg }
      - { name: lazygit }
      - { name: lima }
      - { name: llvm }
      - { name: lua }
      - { name: neovim }
      - { name: nkf }
      - { name: pandoc }
      - { name: peco }
      - { name: pstoedit }
      - { name: ripgrep }
      - { name: rsync }
      - { name: ssh-copy-id }
      - { name: starship }
      - { name: tig }
      - { name: tldr }
      - { name: tmux }
      - { name: tree }
      - { name: vim }
      - { name: xz }
      - { name: zoxide }
      - { name: zsh }

    homebrew_fonts:
      - { name: font-fira-code }
      - { name: font-fira-code-nerd-font }
      - { name: font-cica }
      - { name: font-fontawesome }
      - { name: font-freefont }

    basic_dirs:
      - { path: "{{ lookup('env', 'HOME') }}/.brewland", state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/scratch", state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/Study", state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/bin", state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/include", state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/lib", state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/share", state: directory }
      - { path: "{{ lookup('env', 'HOME') }}/.local/src", state: directory }

    git_repos:
      - {
          name: tpm,
          repo: "https://github.com/tmux-plugins/tpm.git",
          dest: "~/.tmux/plugins/tpm",
        }

  tasks:
    - name: Verify password
      become: yes
      command: echo "sudo password verified"
      changed_when: False

    - name: Create basic directories
      file:
        path: "{{ item.path }}"
        state: "{{ item.state }}"
      with_items: "{{ basic_dirs }}"

    - name: Add repositories for homebrew
      community.general.homebrew_tap:
        path: "{{ brew_exe_path }}"
        tap: "{{ item }}"
        state: present
      with_items: "{{ homebrew_taps }}"

    - name: Update homebrew
      community.general.homebrew:
        path: "{{ brew_exe_path }}"
        update_homebrew: yes

    - name: Install homebrew packages
      community.general.homebrew:
        path: "{{ brew_exe_path }}"
        name: "{{ item.name }}"
        state: "{{ item.state | default('present') }}"
      ignore_errors: true
      with_items: "{{ homebrew_packages }}"
      register: ret_homebrew

    - name: Check updated homebrew package
      set_fact: updated_homebrew_package={{ ret_homebrew.results | selectattr('changed') | map(attribute='item.name') | list }}

    - name: Install fonts
      community.general.homebrew_cask:
        path: "{{ brew_exe_path }}"
        name: "{{ item.name }}"
        state: "{{ item.state | default('installed') }}"
      with_items: "{{ homebrew_fonts }}"

    - name: Install dotfiles
      git:
        repo: "{{ dotfiles.src.repository }}"
        dest: "{{ dotfiles.dest }}"
      register: ret_git_dotfiles
      # Uncomment the following line if git module always returns state changed
      # changed_when: "ret_git_dotfiles.after|default('after') != ret_git_dotfiles.before|default('before')"

    - name: Symlink dotfiles
      shell: "{{ dotfiles.symlink_script }}"
      args:
        chdir: "{{ dotfiles.dest }}"
      when: ret_git_dotfiles is changed

    - name: Install my toolbox | Clone
      git:
        repo: "https://github.com/yusekiya/toolbox.git"
        dest: "~/github/toolbox"
      register: ret_toolbox

    - stat:
        path: "~/.git_manage"
      register: stat_git_manage

    - name: Install my toolbox | Create database file for git manage command
      file:
        state: touch
        dest: "~/.git_manage"
      when: not stat_git_manage.stat.exists

    - name: Install my toolbox | Install
      file:
        state: link
        src: "{{ item }}"
        dest: "~/.local/bin/{{ item | basename }}"
      with_fileglob:
        - "~/github/toolbox/*"
      when: ret_toolbox is changed

    - name: Clone git repositories
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
      with_items: "{{ git_repos }}"
      register: ret_git_clone

    - name: Install Nord dircolors | git clone repo
      git:
        repo: "https://github.com/nordtheme/dircolors.git"
        dest: "~/github/nord-dircolors"
      register: ret_nord_dircolors_clone

    - name: Install Nord dircolors | make symlink
      file:
        state: link
        src: "~/github/nord-dircolors/src/dir_colors"
        dest: "~/.dircolors"
      when: ret_nord_dircolors_clone is changed

    - name: Downlowd .envrc for brewland | x86_64
      get_url:
        url: "https://gist.githubusercontent.com/yusekiya/c38cb5216084365273af117b99a42472/raw/aa217968d4220919cf445d945dccef1dbdb3523e/.envrc"
        dest: "{{ lookup('env', 'HOME') }}/.brewland/.envrc"
      when: ansible_facts['architecture'] == "x86_64"

    - name: Downlowd .envrc for brewland | arm64
      get_url:
        url: "https://gist.githubusercontent.com/yusekiya/dad7f7b67e261ae048344e48a28eb31a/raw/20db49dd1772a84586fd1bc7f79a749b73945dbb/.envrc"
        dest: "{{ lookup('env', 'HOME') }}/.brewland/.envrc"
      when: ansible_facts['architecture'] == "arm64"

    - name: Register zsh | x86_64
      become: yes
      lineinfile:
        dest: /etc/shells
        insertafter: EOF
        search_string: "/usr/local/bin/zsh"
        line: /usr/local/bin/zsh
        state: present
      when: ansible_facts['architecture'] == "x86_64"

    - name: Register zsh | arm64
      become: yes
      lineinfile:
        dest: /etc/shells
        insertafter: EOF
        search_string: "/opt/homebrew/bin/zsh"
        line: /opt/homebrew/bin/zsh
        state: present
      when: ansible_facts['architecture'] == "arm64"
